buildscript {
    ext.junit_version = '5.1.0'
}

plugins {
    id 'maven-publish'
    id 'com.jfrog.artifactory' version '4.15.2'
    id 'org.jetbrains.dokka' version '0.10.1'
    id 'org.jetbrains.kotlin.multiplatform' version '1.3.72'
    id 'org.jetbrains.kotlin.kapt' version '1.3.72'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.3.72'
}

group = 'com.jeffpdavidson.kotwords'
version = '1.0.0-SNAPSHOT'

repositories {
    jcenter()
    // TODO: Remove once https://github.com/pdvrieze/xmlutil/issues/26 is resolved.
    maven {
        url "https://dl.bintray.com/pdvrieze/maven"
    }
}

kotlin {
    jvm {
        withJava()

        compilations.main.kotlinOptions {
            jvmTarget = "1.8"
        }

        compilations.test.kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    js {
        browser {
            dceTask {
                keep 'kotwords'
            }
        }
    }
}

// HACK: To make JS test resources accessible to tests, we copy them to the Karma server's base
// directory where they can be served (see karma.config.d/resources.js).
jsTestProcessResources.doLast {
    delete {
        delete("$buildDir/js/packages/kotwords-test/node_modules/resources/test")
    }
    copy {
        from("$buildDir/processedResources/js/test")
        into("$buildDir/js/packages/kotwords-test/node_modules/resources/test")
    }
}

dependencies {
    commonMainImplementation "org.jetbrains.kotlin:kotlin-stdlib"
    commonMainImplementation "org.jetbrains.kotlinx:kotlinx-io:0.1.16"
    commonMainImplementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:0.20.0"
    commonMainImplementation "net.mamoe.yamlkt:yamlkt-common:0.3.2"
    commonMainImplementation "net.devrieze:xmlutil-serialization:0.20.0.1"

    commonTestImplementation "org.jetbrains.kotlin:kotlin-test-annotations-common"
    commonTestImplementation "org.jetbrains.kotlin:kotlin-test-common"

    jvmMainImplementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0"
    jvmMainImplementation "org.jetbrains.kotlinx:kotlinx-io-jvm:0.1.16"
    jvmMainImplementation "com.squareup.moshi:moshi:1.5.0"
    jvmMainImplementation "org.apache.pdfbox:pdfbox:2.0.9"
    jvmMainImplementation "org.glassfish:javax.json:1.1.2"
    jvmMainImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    jvmMainImplementation "org.jsoup:jsoup:1.11.2"
    jvmMainImplementation "net.mamoe.yamlkt:yamlkt:0.3.2"
    jvmMainImplementation "net.devrieze:xmlutil-serialization-jvm:0.20.0.1"

    jvmMainImplementation "se.ansman.kotshi:api:1.0.4"
    kapt "se.ansman.kotshi:compiler:1.0.4"

    jvmTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.6"
    jvmTestImplementation "org.jetbrains.kotlin:kotlin-test-junit"

    jsMainImplementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:0.20.0"
    jsMainImplementation "org.jetbrains.kotlinx:kotlinx-io-js:0.1.16"
    jsMainImplementation(npm("jszip", "3.4.0"))
    jsMainImplementation(npm("text-encoding", "0.7.0"))
    jsMainImplementation "net.mamoe.yamlkt:yamlkt-js:0.3.2"
    jsMainImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-js:1.3.6"
    jsMainImplementation "net.devrieze:xmlutil-serialization-js:0.20.0.1"
    jsMainImplementation "org.jetbrains.kotlinx:kotlinx-html-js:0.6.12"

    jsTestImplementation "org.jetbrains.kotlin:kotlin-test-js"
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"

    configuration {
        perPackageOption {
            prefix = "com.jeffpdavidson.kotwords.formats.json"
            suppress = true
        }
    }
}

task dokkaJar(type: Jar) {
    group = JavaBasePlugin.DOCUMENTATION_GROUP
    archiveClassifier.set("javadoc")
    from(dokka)
}

tasks.named("jvmSourcesJar") {
    exclude("com/jeffpdavidson/kotwords/formats/json")
}

publishing {
    publications {
        jvm {
            artifact(dokkaJar)
        }
    }
}

artifactory {
    contextUrl = 'https://oss.jfrog.org'
    publish {
        repository {
            repoKey = 'oss-snapshot-local'
            username = System.env.CI_DEPLOY_USERNAME
            password = System.env.CI_DEPLOY_PASSWORD
        }
        defaults {
            publications(publishing.publications.jvm, publishing.publications.js, publishing.publications.metadata)
        }
    }
}
