buildscript {
    ext.junit_version = '5.1.0'
}

plugins {
    id 'maven-publish'
    id 'com.jfrog.artifactory' version '4.7.5'
    id 'org.jetbrains.dokka' version '0.9.17'
    id 'org.jetbrains.kotlin.jvm' version '1.2.40'
    id 'org.jetbrains.kotlin.kapt' version '1.2.40'
}

group = 'com.jeffpdavidson.kotwords'
version = '1.0.0-SNAPSHOT'

repositories {
    jcenter()
}

dependencies {
    compile "com.squareup.moshi:moshi:1.5.0"
    compile "org.apache.pdfbox:pdfbox:2.0.9"
    compile "org.glassfish:javax.json:1.1.2"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-nio:0.22.5"
    compile "org.jetbrains.kotlinx:kotlinx-io-jvm:0.0.10"
    compile "org.jsoup:jsoup:1.11.2"

    compile "se.ansman.kotshi:api:1.0.4"
    kapt "se.ansman.kotshi:compiler:1.0.4"

    testCompile "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junit_version"
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
    packageOptions {
        prefix = "com.jeffpdavidson.kotwords.formats.json"
        suppress = true
    }
}

task dokkaJar(type: Jar) {
    group = JavaBasePlugin.DOCUMENTATION_GROUP
    classifier = "javadoc"
    from(dokka)
}

task sourcesJar(type: Jar) {
    group = JavaBasePlugin.DOCUMENTATION_GROUP
    classifier = "sources"
    from(sourceSets.main.allSource)
    exclude("com/jeffpdavidson/kotwords/formats/json")
}

publishing {
    publications {
        library(MavenPublication) {
            from components.java
            artifact(sourcesJar)
            artifact(dokkaJar)
        }
    }
}

artifactory {
    contextUrl = 'https://oss.jfrog.org'
    publish {
        repository {
            repoKey = 'oss-snapshot-local'
            username = System.env.CI_DEPLOY_USERNAME
            password = System.env.CI_DEPLOY_PASSWORD
        }
        defaults {
            publications('library')
        }
    }
}